@page "/"
@using BlazorZipper.Services;
@inject IArchiveService ArchiveService;
@inject IJSRuntime JsRuntime;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Click the button,to download files enlisted below and add them to zip archive on client side
<div>
    <button class="btn btn-primary" @onclick="DownloadArchive" disabled="@_downloading">@(_downloading ? "Downloading" : "Download Archive")</button>
    <input type="number" @bind="_maxDegreeOfParallelism" min="1"/>
</div>
<div class="container py-1">
    <div class="row">
        <div class="col-lg-7 mx-auto">
            <div class="card rounded-0 border-0 shadow">
                <div class="card-body p-5">

                    <!--  Bootstrap table-->
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Url</th>
                                <th scope="col">Status</th>
                                <th scope="col">Edit</th>
                            </tr>
                            </thead>
                            <tbody>
                            @for (int i = 0; i < _urls.Count; i++)
                            {
                                var urlRow = _urls[i];
                                var url = urlRow.Url;
                                <tr class="@(urlRow.Status == "Done!" ? "table-success": "")">
                                    <th scope="row">@i</th>
                                    <td>
                                        <a href="@url">@url</a>
                                    </td>
                                    <td>
                                        @urlRow.Status
                                    </td>
                                    <td>
                                        <button class="btn btn-outline-danger" type="button" role="presentation" @onclick="() => DeleteRow(urlRow)">
                                            Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                            <tr>
                                <th scope="row">@_urls.Count</th>
                                <td colspan="2" >
                                    <input class="form-control rounded-0" type="text" @bind="_newUrlField" placeholder="url">
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Add rows button-->
                    <a class="btn btn-primary rounded-0 btn-block" @onclick="AddNewRow">Add new row</a>
                    <a class="btn btn-primary rounded-0 btn-block" @onclick="ClearUrls">Clear</a>
                    <p>* be aware of CORS</p>
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    private List<UrlRow> _urls = new List<string>()
    {
        "https://images.unsplash.com/photo-1672362020135-32a8ea3f463f?ixlib=rb-4.0.3&dl=taylor-heery-egGgyyaVw7Q-unsplash.jpg",
        "https://images.unsplash.com/photo-1674394006641-b680753c502b?ixlib=rb-4.0.3&dl=heather-wilde-dOZJoIPhriI-unsplash.jpg",
        "https://images.unsplash.com/photo-1674397163504-1245de7aed6d?ixlib=rb-4.0.3&dl=sonya-maria-0iIB99sx4ZQ-unsplash.jpg",
        "https://images.unsplash.com/photo-1665567212965-343772be6cf3?ixlib=rb-4.0.3&dl=marios-gkortsilas-8hpPtpmF4QQ-unsplash.jpg",
        "https://images.unsplash.com/photo-1665567176924-52c7cd5b9393?ixlib=rb-4.0.3&dl=marios-gkortsilas-hvtZ0nP3ZEU-unsplash.jpg",
        "https://images.unsplash.com/photo-1661954864180-e61dea14208a?ixlib=rb-4.0.3&dl=oskar-kadaksoo-i8fRj3z8bvk-unsplash.jpg",
        "https://images.unsplash.com/photo-1663050005289-b0198cf59731?ixlib=rb-4.0.3&dl=kateryna-hliznitsova-q5j72O17MyU-unsplash.jpg",
        "https://images.unsplash.com/photo-1643559478628-8a57168b16c4?ixlib=rb-4.0.3&dl=olga-solodilova-0wkjt8sbZp4-unsplash.jpg",
        "https://images.unsplash.com/photo-1619143838893-fd8e90a5b243?ixlib=rb-4.0.3&dl=michelle-mcewen-HIiBYUnhbmo-unsplash.jpg",
        "https://images.unsplash.com/photo-1666060517945-26044b5057cf?ixlib=rb-4.0.3&dl=gabrielle-henderson-aH6lv9vCgJk-unsplash.jpg",
        "https://images.unsplash.com/photo-1666041834786-cbff79052965?ixlib=rb-4.0.3&dl=jonathan-borba-1F_oFz3o5nM-unsplash.jpg",
        "https://images.unsplash.com/photo-1658509756778-cf30246a13a9?ixlib=rb-4.0.3&dl=sour-moha-_19NYZcwMwE-unsplash.jpg",
        "https://images.unsplash.com/photo-1662638920575-1ce9d88a0607?ixlib=rb-4.0.3&dl=mohamed-nohassi-PVbpygWUlTs-unsplash.jpg",
        "https://images.unsplash.com/photo-1662620717069-1eca556181d5?ixlib=rb-4.0.3&dl=jasper-garratt-zjswPUhkRqg-unsplash.jpg",
        "https://images.unsplash.com/photo-1663160981859-57c9ad0f28ef?ixlib=rb-4.0.3&dl=michelangelo-azzariti-YBYghPHGVx0-unsplash.jpg",
        "https://images.unsplash.com/photo-1635886439542-6cf4af7454e4?ixlib=rb-4.0.3&dl=bjorn-pierre-YZrlDELuvHQ-unsplash.jpg",
        "https://images.unsplash.com/photo-1659812903205-637a07cbbebc?ixlib=rb-4.0.3&dl=austin-ramsey-r1okBnQz_2o-unsplash.jpg",
        "https://images.unsplash.com/photo-1659772847665-b89376be492d?ixlib=rb-4.0.3&dl=pawel-czerwinski-8jg1bvq4E7g-unsplash.jpg",
        "https://images.unsplash.com/photo-1661538755869-d61fd6bf1dec?ixlib=rb-4.0.3&dl=katie-azi-5RZICFRdpOE-unsplash.jpg",
        "https://images.unsplash.com/photo-1659469704981-55a62a24c300?ixlib=rb-4.0.3&dl=mario-esposito-2g4noSMKVFQ-unsplash.jpg",
        "https://images.unsplash.com/photo-1660361338462-4d3d5d0ebdcc?ixlib=rb-4.0.3&dl=bilal-mansuri-SkmUYMen4aE-unsplash.jpg",
        "https://images.unsplash.com/photo-1660361338517-8c8fbb3ac264?ixlib=rb-4.0.3&dl=bilal-mansuri-3r9HlCYTtLU-unsplash.jpg",
        "https://images.unsplash.com/photo-1660361339262-6158fc384861?ixlib=rb-4.0.3&dl=bilal-mansuri-E8Ptx5I9cGI-unsplash.jpg",
        "https://images.unsplash.com/photo-1602491383858-b68437255302?ixlib=rb-4.0.3&dl=neil-mark-thomas-gYuMRzGNSPw-unsplash.jpg",
        "https://images.unsplash.com/photo-1589633827726-8bb96fb3507b?ixlib=rb-4.0.3&dl=marc-lamy-q0tlOqyn_fk-unsplash.jpg",
        "https://images.unsplash.com/photo-1609645778471-613f21fcf3df?ixlib=rb-4.0.3&dl=nadiia-ploshchenko-rQLY5fKHOrk-unsplash.jpg",
        "https://images.unsplash.com/photo-1516912481808-3406841bd33c?ixlib=rb-4.0.3&dl=jonathan-bowers-BqKdvJ8a5TI-unsplash.jpg",
        "https://images.unsplash.com/photo-1609947991962-8c5fd8ab05c1?ixlib=rb-4.0.3&dl=manson-yim-F0mL86YnJXo-unsplash.jpg",
        "https://images.unsplash.com/photo-1459478309853-2c33a60058e7?ixlib=rb-4.0.3&dl=jeremy-thomas-O6N9RV2rzX8-unsplash.jpg",
        "https://images.unsplash.com/photo-1543373014-cfe4f4bc1cdf?ixlib=rb-4.0.3&dl=gaston-abascal-8F-6pXyQyLU-unsplash.jpg",
        "https://images.unsplash.com/photo-1610291080961-52926d67c47a?ixlib=rb-4.0.3&dl=nadiia-ploshchenko-PUxEwTWEokY-unsplash.jpg",
        "https://images.unsplash.com/photo-1623120218365-f12d95301eba?ixlib=rb-4.0.3&dl=robert-ritchie-oWyH0xSweKs-unsplash.jpg",
        "https://images.unsplash.com/photo-1615653051647-321e464edc86?ixlib=rb-4.0.3&dl=yohan-marion-iL6iPs8rE9w-unsplash.jpg",
        "https://images.unsplash.com/photo-1496224303445-89779ef1ed23?ixlib=rb-4.0.3&dl=will-b-UXKNbZjHCyw-unsplash.jpg",
    }
        .Select(x => new UrlRow{Url = x, Status = "None"}).ToList();

    private string _newUrlField = "";

    private bool _downloading = false;

    private int _maxDegreeOfParallelism = 5;

    private async Task DownloadArchive()
    {
        _downloading = true;
        
        _urls.ForEach(x =>
        {
            x.Progress = new Progress<string>(a =>
            {
                x.Status = a;
                StateHasChanged();
            });
        });


        var archiveBytes = await ArchiveService.CreateArchiveAsync(_urls, _maxDegreeOfParallelism);

        // Save to file on client side
        using var archiveStream = new MemoryStream(archiveBytes);
        var filename = "Archive.zip";
        using var streamRef = new DotNetStreamReference(stream: archiveStream);
        await JsRuntime.InvokeVoidAsync("downloadFileFromStream", filename, streamRef);

        _downloading = false;
    }

    private void AddNewRow()
    {
        if (string.IsNullOrWhiteSpace(_newUrlField))
        {
            Console.WriteLine("The url is empty");
            return;
        }
        if (!Uri.IsWellFormedUriString(_newUrlField, UriKind.Absolute))
        {
            Console.WriteLine($"The url: {_newUrlField} is not valid");
            return;
        }
        _urls.Add(new UrlRow(){Url = _newUrlField, Status = "None"});
        _newUrlField = "";
    }

    private void ClearUrls()
    {
        _urls.Clear();
    }

    private void DeleteRow(UrlRow urlRow)
    {
        _urls.Remove(urlRow);
    }
}